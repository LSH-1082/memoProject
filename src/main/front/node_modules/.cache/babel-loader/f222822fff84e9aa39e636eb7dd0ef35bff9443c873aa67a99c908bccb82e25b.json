{"ast":null,"code":"var _jsxFileName = \"/Users/lsh/IdeaProjects/PersonalProject/src/main/front/src/registerPage/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport icon from '../logo/forest_icon.png';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [check, setCheck] = useState(\"\");\n\n  //todo cryptojs 를 이용해서 패스워드 서버로 주기(로그인에서도 해야함)\n  //todo 띄어쓰기가 들어갔을 때 판별하는 기능 추가(로그인에서도 해야함)\n  const registerSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:8080/api/register', {\n        email: email,\n        name: name,\n        password: password\n      });\n      console.log(res.data);\n      if (res.data === \"Already exists email\") alert(\"이미 동일한 이메일의 계정이 존재합니다.\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"main_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: registerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"Email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"passwordCheck\",\n        children: \"Password Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"passwordCheck\",\n          name: \"passwordCheck\",\n          onChange: e => setCheck(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n/*\na 태그를 쓰면 뒤로가기가 가능해서 로그인이랑 계정생성에서는\nuseRoute(?) 같은거 사용해서 뒤로가기 막아야할듯\n\n폼 유효성 검사 해야함\n*/\n_s(Register, \"tG8+600BqTiHYJHbSiSMD8g2TbI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","icon","jsxDEV","_jsxDEV","Register","_s","email","setEmail","name","setName","password","setPassword","check","setCheck","registerSubmit","e","preventDefault","res","post","console","log","data","alert","err","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/lsh/IdeaProjects/PersonalProject/src/main/front/src/registerPage/Register.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from \"axios\";\n\nimport icon from '../logo/forest_icon.png'\nimport './Register.css'\n\nconst Register = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [check, setCheck] = useState(\"\");\n\n    //todo cryptojs 를 이용해서 패스워드 서버로 주기(로그인에서도 해야함)\n    //todo 띄어쓰기가 들어갔을 때 판별하는 기능 추가(로그인에서도 해야함)\n    const registerSubmit = async (e) => {\n        e.preventDefault();\n        try{\n            const res = await axios.post('http://localhost:8080/api/register', {\n                email: email,\n                name: name,\n                password: password\n            });\n            console.log(res.data);\n            if(res.data === \"Already exists email\") alert(\"이미 동일한 이메일의 계정이 존재합니다.\")\n        }\n        catch(err){\n            console.error(err);\n        }\n    };\n\n    return (\n        <div className=\"Body\">\n            <div className=\"image\">\n                <img src={icon} alt=\"main_icon\"/>\n            </div>\n\n            <div className=\"title\">\n                <label>Create an account</label>\n            </div>\n\n            <form className=\"register-form\" onSubmit={registerSubmit}>\n\n                <label className=\"register-label\" htmlFor=\"name\">Name</label>\n\n                <div className=\"register-input\">\n                    <input type=\"text\" id=\"name\" name=\"name\" onChange={(e) => setName(e.target.value)}/>\n                </div>\n\n                <label className=\"register-label\" htmlFor=\"Email\">Email</label>\n\n                <div className=\"register-input\">\n                    <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => setEmail(e.target.value)}/>\n                </div>\n\n                <label className=\"register-label\" htmlFor=\"password\">Password</label>\n\n                <div className=\"register-input\">\n                    <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}/>\n                </div>\n\n                <label className=\"register-label\" htmlFor=\"passwordCheck\">Password Check</label>\n\n                <div className=\"register-input\">\n                    <input type=\"password\" id=\"passwordCheck\" name=\"passwordCheck\" onChange={(e) => setCheck(e.target.value)}/>\n                </div>\n\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n};\n\n/*\na 태그를 쓰면 뒤로가기가 가능해서 로그인이랑 계정생성에서는\nuseRoute(?) 같은거 사용해서 뒤로가기 막아야할듯\n\n폼 유효성 검사 해야함\n*/\n\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}